# -*- coding: utf-8 -*-
"""dsi_problem_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JZKP4nvuyTCFkMD1wbtroBASfPFDKK2P
"""

class product:
  def __init__(self, name, buy_price, sell_price, number):
    self.name = name
    self.buy_price = buy_price
    self.sell_price = sell_price
    self.available_number = number
    self.total_profit = 0

  def sold_a_product(self, numberOfSoldProduct):
    self.available_number -= numberOfSoldProduct
    self.total_profit += (self.sell_price-self.buy_price) * numberOfSoldProduct
  
  def buy_a_product(self, numberOfProductBuy):
    self.available_number += numberOfProductBuy

from tabulate import tabulate
class account:
  def __init__(self):
    self.product_list = {}
    self.available_balance = 0

  def add_product(self, name, buy_price, sell_price, number):
    self.product_list[name] = product(name, buy_price, sell_price, number)
    print('\n Product Added!!')

  def buy_product(self, name, numberOfProduct):
    if self.product_list[name].buy_price * numberOfProduct > self.available_balance:
      print("Ooops! Your balance isn't sufficient")

    elif name in self.product_list:
      product = self.product_list[name]
      self.available_balance -= product.buy_price * numberOfProduct
      product.buy_a_product(numberOfProduct)
      print('\n You bought it!!')

  def delete_product(self, name):
    if name in self.product_list:
      self.product_list.pop(name)
      print('\n Product Deleted!!')

  def sell_product(self, name, numberOfProduct):
    if numberOfProduct > self.product_list[name].available_number:
      print('Ooops! The number of selling products exceeded the number available in inventory')
    
    elif name in self.product_list :
      product = self.product_list[name]
      self.available_balance += product.sell_price * numberOfProduct
      product.sold_a_product(numberOfProduct)
      print('\n Product sold!!')

  def list_of_product(self):
    listt = []
    for element in self.product_list:
      product = self.product_list[element]
      lst = [ product.name, product.available_number, product.total_profit]
      listt.append(lst)
    
    table = tabulate(listt, headers=['Name', 'Number of Available Product', 'Profit'])
    return table

  def get_available_balance(self):
    return self.available_balance

#creating new account
new_account = account()

#add product to account
name = input('Enter Product Name  : ')
buy_price = int(input('Enter Buying Price :  '))
sell_price = int(input('Enter Selling Price  : '))
num_of_product = int(input('Enter Number of Product :  '))


new_account.add_product(name, buy_price, sell_price, num_of_product)

#delete a product
name = input('Name of the product that you want to delete:  ')
new_account.delete_product(name)

#need to select product and number of the product that you sell
name = input('Name of the product that you want to sell:  ')
number = int(input('Number of the product:  '))
new_account.sell_product(name, number)

#buy product
name = input('Name of the product that you want to buy :  ')
number = int(input('Number of the product:  '))
new_account.buy_product(name, number)

#see the list of the product
print(new_account.list_of_product())

#see available balance
print(new_account.get_available_balance())